{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport OnBoardingScreen from \"../screens/OnBoardingScreen\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport SignUpScreen from \"../screens/SignUpScreen\";\nimport ForgotPasswordScreen from \"../screens/ForgotPasswordScreen\";\nimport React, { useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar AuthStack = function AuthStack() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    isFirstLaunch = _useState2[0],\n    setIsFirstLaunch = _useState2[1];\n  var routeName;\n  useEffect(function () {\n    AsyncStorage.getItem('alreadyLaunched').then(function (value) {\n      if (value == null) {\n        AsyncStorage.setItem('alreadyLaunched', 'true');\n        setIsFirstLaunch(true);\n      } else {\n        setIsFirstLaunch(false);\n      }\n    });\n  }, []);\n  if (isFirstLaunch == null) {\n    return null;\n  } else if (isFirstLaunch == true) {\n    routeName = 'OnBoarding';\n  } else {\n    routeName = 'OnBoarding';\n  }\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: routeName,\n    children: [_jsx(Stack.Screen, {\n      name: \"OnBoarding\",\n      component: OnBoardingScreen,\n      options: {\n        header: function header() {\n          return null;\n        }\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen,\n      options: {\n        header: function header() {\n          return null;\n        }\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"SignUp\",\n      component: SignUpScreen,\n      options: {\n        header: function header() {\n          return null;\n        }\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"ForgotPassword\",\n      component: ForgotPasswordScreen,\n      options: function options(_ref) {\n        var navigation = _ref.navigation;\n        return {\n          title: 'Reset Password',\n          headerStyle: {\n            backgroundColor: '#f9fafd',\n            shadowColor: '#f9fafd'\n          },\n          headerLeft: function headerLeft() {\n            return _jsx(View, {\n              style: {\n                marginLeft: 10\n              },\n              children: _jsx(FontAwesome.Button, {\n                name: \"long-arrow-left\",\n                size: 25,\n                backgroundColor: \"#f9fafd\",\n                color: \"#333\",\n                onPress: function onPress() {\n                  return navigation.navigate('Login');\n                }\n              })\n            });\n          }\n        };\n      }\n    })]\n  });\n};\nexport default AuthStack;","map":{"version":3,"names":["createNativeStackNavigator","OnBoardingScreen","LoginScreen","SignUpScreen","ForgotPasswordScreen","React","useState","useEffect","AsyncStorage","FontAwesome","jsx","_jsx","jsxs","_jsxs","Stack","AuthStack","_useState","_useState2","_slicedToArray","isFirstLaunch","setIsFirstLaunch","routeName","getItem","then","value","setItem","Navigator","initialRouteName","children","Screen","name","component","options","header","_ref","navigation","title","headerStyle","backgroundColor","shadowColor","headerLeft","View","style","marginLeft","Button","size","color","onPress","navigate"],"sources":["/Users/ariskandar/Desktop/Messaging-Application/navigation/AuthStack.js"],"sourcesContent":["import { View } from 'react-native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nimport OnBoardingScreen from '../screens/OnBoardingScreen';\nimport LoginScreen from '../screens/LoginScreen';\nimport SignUpScreen from '../screens/SignUpScreen';\nimport ForgotPasswordScreen from '../screens/ForgotPasswordScreen';\nimport React, { useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\n\nconst Stack = createNativeStackNavigator();\n\nconst AuthStack = () => {\n  const [isFirstLaunch, setIsFirstLaunch] = useState(null);\n  let routeName;\n\n  useEffect(() => {\n    AsyncStorage.getItem('alreadyLaunched').then((value) => {\n      if(value==null){\n        AsyncStorage.setItem('alreadyLaunched', 'true');\n        setIsFirstLaunch(true);\n      } else {\n        setIsFirstLaunch(false);\n      }\n    });\n  }, []);\n\n  if( isFirstLaunch == null ) {\n    return null;\n  }else if (isFirstLaunch == true ) {\n    routeName = 'OnBoarding'\n  }else {\n    routeName = 'OnBoarding'\n  }\n\n  return (\n    <Stack.Navigator initialRouteName={routeName}>\n      <Stack.Screen \n        name='OnBoarding'\n        component={OnBoardingScreen}\n        options={{header: () => null}}\n      />\n      <Stack.Screen \n        name='Login'\n        component={LoginScreen}\n        options={{header: () => null}}\n      />\n      <Stack.Screen \n        name='SignUp'\n        component={SignUpScreen}\n        options={{header: () => null}}\n      />\n      <Stack.Screen\n        name=\"ForgotPassword\"\n        component={ForgotPasswordScreen}\n        options={({navigation}) => ({\n          title: 'Reset Password',\n          headerStyle: {\n            backgroundColor: '#f9fafd',\n            shadowColor: '#f9fafd',\n          },\n          headerLeft: () => (\n            <View style={{marginLeft: 10}}>\n              <FontAwesome.Button \n                name=\"long-arrow-left\"\n                size={25}\n                backgroundColor=\"#f9fafd\"\n                color=\"#333\"\n                onPress={() => navigation.navigate('Login')}\n              />\n            </View>\n          ),\n        })}\n      />\n    </Stack.Navigator>\n  );\n};\n\nexport default AuthStack;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}