{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FormInput from \"../components/FormInput\";\nimport FormButton from \"../components/FormButton\";\nimport { AuthContext } from \"../navigation/AuthProvider\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    phoneNumber = _useState6[0],\n    setPhoneNumber = _useState6[1];\n  var _useContext = useContext(AuthContext),\n    login = _useContext.login;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: require(\"../assets/logo-black.png\"),\n      style: styles.logo\n    }), _jsx(FormInput, {\n      labelValue: email,\n      onChangeText: function onChangeText(userEmail) {\n        return setEmail(userEmail);\n      },\n      placeholderText: \"Email\",\n      iconType: \"user\",\n      keyboardType: \"email-address\",\n      autoCapitalize: \"none\",\n      autoCorrect: false\n    }), _jsx(FormInput, {\n      labelValue: password,\n      onChangeText: function onChangeText(userPassword) {\n        return setPassword(userPassword);\n      },\n      placeholderText: \"Password\",\n      iconType: \"lock\",\n      secureTextEntry: true\n    }), _jsx(FormInput, {\n      labelValue: phoneNumber,\n      onChangeText: function onChangeText(userPhoneNumber) {\n        return setPhoneNumber(userPhoneNumber);\n      },\n      placeholderText: \"Phone Number\",\n      keyboardType: \"number-pad\"\n    }), _jsx(FormButton, {\n      buttonTitle: \"Sign In\",\n      onPress: function onPress() {\n        return login(email, password);\n      }\n    }), _jsx(TouchableOpacity, {\n      style: styles.forgotButton,\n      onPress: function onPress() {\n        return navigation.navigate('ForgotPassword');\n      },\n      children: _jsx(Text, {\n        style: styles.navButtonText,\n        children: \"Forgot Password?\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.navButton,\n      onPress: function onPress() {\n        return navigation.navigate('SignUp');\n      },\n      children: _jsx(Text, {\n        style: styles.navButtonText,\n        children: \"Don't have an account? Create here!\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20\n  },\n  logo: {\n    height: 250,\n    width: 250,\n    resizeMode: 'cover'\n  },\n  text: {\n    fontSize: 28,\n    marginBottom: 10,\n    color: '#051d5f'\n  },\n  navButton: {\n    marginTop: 15\n  },\n  forgotButton: {\n    marginVertical: 35\n  },\n  navButtonText: {\n    fontSize: 18,\n    fontWeight: '500',\n    color: '#2e64e5'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useContext","useState","View","Text","StyleSheet","Image","TouchableOpacity","FormInput","FormButton","AuthContext","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","phoneNumber","setPhoneNumber","_useContext","login","style","styles","container","children","source","require","logo","labelValue","onChangeText","userEmail","placeholderText","iconType","keyboardType","autoCapitalize","autoCorrect","userPassword","secureTextEntry","userPhoneNumber","buttonTitle","onPress","forgotButton","navigate","navButtonText","navButton","create","backgroundColor","flex","alignItems","justifyContent","padding","height","width","resizeMode","text","fontSize","marginBottom","color","marginTop","marginVertical","fontWeight"],"sources":["/Users/ariskandar/Desktop/Messaging-Application/screens/LoginScreen.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { View, Text, StyleSheet, Image, TouchableOpacity } from 'react-native';\nimport FormInput from '../components/FormInput';\nimport FormButton from '../components/FormButton';\nimport { AuthContext } from '../navigation/AuthProvider';\n\nconst LoginScreen = ({navigation}) => {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [phoneNumber, setPhoneNumber] = useState();\n\n  const{login} = useContext(AuthContext);\n  return (\n    <View style={styles.container}>\n      <Image\n        source={require('../assets/logo-black.png')}\n        style={styles.logo}\n      />\n      <FormInput \n        labelValue={email}\n        onChangeText={(userEmail) => setEmail(userEmail)}\n        placeholderText='Email'\n        iconType='user'\n        keyboardType='email-address'\n        autoCapitalize='none'\n        autoCorrect={false}\n      />\n      <FormInput \n        labelValue={password}\n        onChangeText={(userPassword) => setPassword(userPassword)}\n        placeholderText='Password'\n        iconType='lock'\n        secureTextEntry={true}\n      />\n      <FormInput \n        labelValue={phoneNumber}\n        onChangeText={(userPhoneNumber) => setPhoneNumber(userPhoneNumber)}\n        placeholderText='Phone Number'\n        keyboardType='number-pad'\n      />\n      <FormButton \n        buttonTitle='Sign In'\n        onPress= {() => login(email,password)}\n      />\n      <TouchableOpacity style={styles.forgotButton} onPress={() => navigation.navigate('ForgotPassword')}>\n        <Text style={styles.navButtonText}>Forgot Password?</Text>\n      </TouchableOpacity>\n      <TouchableOpacity \n        style={styles.navButton} \n        onPress={() => navigation.navigate('SignUp')}>\n        <Text style={styles.navButtonText}>Don't have an account? Create here!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  logo: {\n    height: 250,\n    width: 250,\n    resizeMode: 'cover',\n  },\n  text: {\n    fontSize: 28,\n    marginBottom: 10,\n    color: '#051d5f',\n  },\n  navButton: {\n    marginTop: 15,\n  },\n  forgotButton: {\n    marginVertical: 35,\n  },\n  navButtonText: {\n    fontSize: 18,\n    fontWeight: '500',\n    color: '#2e64e5'\n  }\n});\n\n//make this component available to the app\nexport default LoginScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}