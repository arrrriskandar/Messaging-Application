{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FormInput from \"../components/FormInput\";\nimport FormButton from \"../components/FormButton\";\nimport { AuthContext } from \"../navigation/AuthProvider\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SignUpScreen = function SignUpScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useContext = useContext(AuthContext),\n    register = _useContext.register;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    confirmPassword = _useState6[0],\n    setConfirmPassword = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isTappedPassword = _useState8[0],\n    setIsTappedPassword = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isTappedConfirmPassword = _useState10[0],\n    setIsTappedConfirmPassword = _useState10[1];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.text,\n      children: \"Create an account\"\n    }), _jsx(FormInput, {\n      labelValue: email,\n      onChangeText: function onChangeText(userEmail) {\n        return setEmail(userEmail);\n      },\n      placeholderText: \"Email\",\n      iconType: \"user\",\n      keyboardType: \"email-address\",\n      autoCapitalize: \"none\",\n      autoCorrect: false\n    }), _jsx(FormInput, {\n      labelValue: password,\n      onChangeText: function onChangeText(userPassword) {\n        return setPassword(userPassword);\n      },\n      placeholderText: \"Password\",\n      iconType: \"lock\",\n      secureTextEntry: true,\n      onBlur: function onBlur() {\n        return setIsTappedPassword(true);\n      }\n    }), isTappedPassword && password.match('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$') === null && _jsx(Text, {\n      style: styles.errorText,\n      children: \"Password must contain minumum 8 characters, at least one uppercase letter, one lowercase letter, one digit and one special character\"\n    }), _jsx(FormInput, {\n      labelValue: confirmPassword,\n      onChangeText: function onChangeText(userConfirmPassword) {\n        return setConfirmPassword(userConfirmPassword);\n      },\n      placeholderText: \"Confirm Password\",\n      iconType: \"lock\",\n      secureTextEntry: true,\n      onBlur: function onBlur() {\n        return setIsTappedConfirmPassword(true);\n      }\n    }), isTappedConfirmPassword && password !== confirmPassword && _jsx(Text, {\n      style: styles.errorText,\n      children: \"Your passwords do not match\"\n    }), _jsx(FormButton, {\n      buttonTitle: \"Sign Up\",\n      disabled: password !== confirmPassword,\n      onPress: function onPress() {\n        return register(email, password);\n      }\n    }), _jsxs(View, {\n      style: styles.textPrivate,\n      children: [_jsx(Text, {\n        style: styles.color_textPrivate,\n        children: \"By registering, you confirm that you accept our \"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return alert('T&S clicked');\n        },\n        children: _jsx(Text, {\n          style: [styles.color_textPrivate, {\n            color: '#e88832'\n          }],\n          children: \"Terms of service \"\n        })\n      }), _jsx(Text, {\n        style: styles.color_textPrivate,\n        children: \"and \"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return alert('P&P clicked');\n        },\n        children: _jsx(Text, {\n          style: [styles.color_textPrivate, {\n            color: '#e88832'\n          }],\n          children: \"Privacy Policy\"\n        })\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.navButton,\n      onPress: function onPress() {\n        return navigation.navigate('Login');\n      },\n      children: _jsx(Text, {\n        style: styles.navButtonText,\n        children: \"Have an account? Sign In\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#f9fafd',\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20\n  },\n  text: {\n    fontSize: 28,\n    marginBottom: 10,\n    color: '#051d5f'\n  },\n  navButton: {\n    marginTop: 15\n  },\n  navButtonText: {\n    fontSize: 18,\n    fontWeight: '500',\n    color: '#2e64e5'\n  },\n  textPrivate: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginVertical: 35,\n    justifyContent: 'center'\n  },\n  color_textPrivate: {\n    fontSize: 13,\n    fontWeight: '400',\n    color: 'grey'\n  },\n  errorText: {\n    fontSize: 12,\n    color: '#FF0D10'\n  }\n});\nexport default SignUpScreen;","map":{"version":3,"names":["React","useContext","useState","View","Text","StyleSheet","TouchableOpacity","FormInput","FormButton","AuthContext","jsx","_jsx","jsxs","_jsxs","SignUpScreen","_ref","navigation","_useContext","register","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","confirmPassword","setConfirmPassword","_useState7","_useState8","isTappedPassword","setIsTappedPassword","_useState9","_useState10","isTappedConfirmPassword","setIsTappedConfirmPassword","style","styles","container","children","text","labelValue","onChangeText","userEmail","placeholderText","iconType","keyboardType","autoCapitalize","autoCorrect","userPassword","secureTextEntry","onBlur","match","errorText","userConfirmPassword","buttonTitle","disabled","onPress","textPrivate","color_textPrivate","alert","color","navButton","navigate","navButtonText","create","backgroundColor","flex","alignItems","justifyContent","padding","fontSize","marginBottom","marginTop","fontWeight","flexDirection","flexWrap","marginVertical"],"sources":["/Users/ariskandar/Desktop/Messaging-Application/screens/SignUpScreen.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\nimport FormInput from '../components/FormInput';\nimport FormButton from '../components/FormButton';\nimport { AuthContext } from '../navigation/AuthProvider';\n\nconst SignUpScreen = ({navigation}) => {\n  const {register} = useContext(AuthContext);\n  \n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const [isTappedPassword, setIsTappedPassword] =useState(false);\n  const [isTappedConfirmPassword, setIsTappedConfirmPassword] =useState(false);\n  return (\n      <View style={styles.container}>\n        <Text style={styles.text}>Create an account</Text>\n        <FormInput \n        labelValue={email}\n        onChangeText={(userEmail) => setEmail(userEmail)}\n        placeholderText='Email'\n        iconType='user'\n        keyboardType='email-address'\n        autoCapitalize='none'\n        autoCorrect={false}\n      />\n      <FormInput \n        labelValue={password}\n        onChangeText={(userPassword) => setPassword(userPassword)}\n        placeholderText='Password'\n        iconType='lock'\n        secureTextEntry={true}\n        onBlur={() => setIsTappedPassword(true)}\n      />\n      {isTappedPassword && password.match('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$') === null && (\n        <Text style={styles.errorText}>Password must contain minumum 8 characters, at least one uppercase letter, one lowercase letter, one digit and one special character</Text>\n      )}\n      <FormInput \n        labelValue={confirmPassword}\n        onChangeText={(userConfirmPassword) => setConfirmPassword(userConfirmPassword)}\n        placeholderText='Confirm Password'\n        iconType='lock'\n        secureTextEntry={true}\n        onBlur={() => setIsTappedConfirmPassword(true)}\n      />\n      {isTappedConfirmPassword && password!==confirmPassword && (\n        <Text style={styles.errorText}>Your passwords do not match</Text>\n      )}\n      <FormButton \n        buttonTitle='Sign Up'\n        disabled={password!==confirmPassword}\n        onPress= {() => register(email,password)}\n      />\n      <View style={styles.textPrivate}>\n        <Text style={styles.color_textPrivate}>By registering, you confirm that you accept our </Text>\n        <TouchableOpacity onPress={() => alert('T&S clicked')}>\n          <Text style={[styles.color_textPrivate, {color:'#e88832'}]}>Terms of service </Text>\n        </TouchableOpacity>\n        <Text style={styles.color_textPrivate}>and </Text>\n        <TouchableOpacity onPress={() => alert('P&P clicked')}>\n          <Text style={[styles.color_textPrivate, {color:'#e88832'}]}>Privacy Policy</Text>\n        </TouchableOpacity>\n      </View>\n      <TouchableOpacity style={styles.navButton} onPress={() => navigation.navigate('Login')}>\n        <Text style={styles.navButtonText}>Have an account? Sign In</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#f9fafd',\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  text: {\n    fontSize: 28,\n    marginBottom: 10,\n    color: '#051d5f',\n  },\n  navButton: {\n    marginTop: 15,\n  },\n  navButtonText: {\n    fontSize: 18,\n    fontWeight: '500',\n    color: '#2e64e5',\n  },\n  textPrivate: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginVertical: 35,\n    justifyContent: 'center',\n  },\n  color_textPrivate: {\n    fontSize: 13,\n    fontWeight: '400',\n    color: 'grey',\n  },\n  errorText: {\n    fontSize: 12,\n    color: '#FF0D10',\n  }\n});\n\nexport default SignUpScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}